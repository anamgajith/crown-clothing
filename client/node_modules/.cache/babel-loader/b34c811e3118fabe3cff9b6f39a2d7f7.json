{"ast":null,"code":"import _objectSpread from \"/home/anamgajith/crown/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.action\";\nimport { signInWithGoogle, createUserProfileDocument, auth } from \"../../firebase/firebase.utils\";\n\nconst getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubScribe = auth.onAuthStateChanged(userAuth => {\n      unsubScribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport function* getSnapShotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogles() {\n  try {\n    const _ref = yield signInWithGoogle(),\n          user = _ref.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isAuthenticated() {\n  try {\n    const user = yield getCurrentUser();\n    if (!user) return;\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapShotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignIn() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogles);\n}\nexport function* onEmailSignIn() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onUserSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignIn), call(onEmailSignIn), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onUserSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/anamgajith/crown/crown-clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","call","put","all","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","signInWithGoogle","createUserProfileDocument","auth","getCurrentUser","Promise","resolve","reject","unsubScribe","onAuthStateChanged","userAuth","getSnapShotFromUserAuth","additionalData","userRef","userSnapShot","get","id","data","error","signInWithGoogles","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignIn","GOOGLE_SIGNIN_START","onEmailSignIn","EMAIL_SIGNIN_START","onSignUpStart","SIGN_UP_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onUserSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure\n} from \"./user.action\";\n\nimport {\n  signInWithGoogle,\n  createUserProfileDocument,\n  auth\n} from \"../../firebase/firebase.utils\";\n\nconst getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubScribe = auth.onAuthStateChanged(userAuth => {\n      unsubScribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport function* getSnapShotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogles() {\n  try {\n    const { user } = yield signInWithGoogle();\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isAuthenticated() {\n  try {\n    const user = yield getCurrentUser();\n    if (!user) return;\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapShotFromUserAuth(user, additionalData);\n}\n\nexport function* onGoogleSignIn() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogles);\n}\n\nexport function* onEmailSignIn() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onUserSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignIn),\n    call(onEmailSignIn),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onUserSignUpSuccess)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}